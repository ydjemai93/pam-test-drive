var q=Object.defineProperty,G=Object.defineProperties;var v=Object.getOwnPropertyDescriptors;var R=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty,U=Object.prototype.propertyIsEnumerable;var P=(s,e,t)=>e in s?q(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,a=(s,e)=>{for(var t in e||(e={}))A.call(e,t)&&P(s,t,e[t]);if(R)for(var t of R(e))U.call(e,t)&&P(s,t,e[t]);return s},d=(s,e)=>G(s,v(e));var E=(s,e)=>{var t={};for(var r in s)A.call(s,r)&&e.indexOf(r)<0&&(t[r]=s[r]);if(s!=null&&R)for(var r of R(s))e.indexOf(r)<0&&U.call(s,r)&&(t[r]=s[r]);return t};var w="1.6.9";var D=["token","password","secret","apiKey","authorization","auth","key","access_token"];function T(s,e=new WeakSet){if(s==null)return s;if(typeof s=="object"){if(e.has(s))return"[CIRCULAR]";if(e.add(s),Array.isArray(s))return s.map(r=>T(r,e));let t={};for(let[r,n]of Object.entries(s)){let o=D.some(i=>r.toLowerCase().includes(i.toLowerCase()));t[r]=o?"[REDACTED]":T(n,e)}return t}return s}function h(...s){if(typeof process!="undefined"&&typeof process.env!="undefined"&&process.env.PD_SDK_DEBUG==="true"){let e=s.map(t=>T(t));console.log("[PD_SDK_DEBUG]",...e)}}var C=class{constructor(e){this.version=w;var n;this.environment=(n=e.environment)!=null?n:"production";let{apiHost:t="api.pipedream.com",workflowDomain:r="m.pipedream.net"}=e;this.apiHost=t,this.baseApiUrl=`https://${t}/v1`,this.workflowDomain=r}getEnvironment(){return this.environment}async makeRequest(e,t={}){let I=t,{params:r,headers:n,body:o,method:i="GET",baseURL:p=this.baseApiUrl}=I,f=E(I,["params","headers","body","method","baseURL"]),u=new URL(`${p}${e}`);if(r)for(let[k,x]of Object.entries(r))x!=null&&u.searchParams.append(k,String(x));let g=d(a({},n),{"X-PD-SDK-Version":w,"X-PD-Environment":this.environment}),c=null;o&&(o instanceof FormData||o instanceof URLSearchParams||typeof o=="string"?c=o:(c=JSON.stringify(o),g["Content-Type"]=g["Content-Type"]||"application/json"));let l=a({method:i,headers:g},f);["POST","PUT","PATCH"].includes(i.toUpperCase())&&c&&(l.body=c);let m=await fetch(u.toString(),l),y=await m.text();if(h("status: ",m.status),h("url: ",u.toString()),h("requestOptions: ",l),h("rawBody: ",y),!m.ok)throw new Error(`HTTP error! status: ${m.status}, body: ${y}`);let _=m.headers.get("Content-Type");if(_&&_.includes("application/json"))try{return JSON.parse(y)}catch(k){h("Couldn't parse json, falling back to raw",k)}return y}async makeAuthorizedRequest(e,t={}){let r=d(a({"Content-Type":"application/json"},t.headers),{Authorization:await this.authHeaders()});return this.makeRequest(e,d(a({},t),{headers:r}))}makeConnectRequest(e,t={}){let r="/connect";return this.projectId&&(r+=`/${this.projectId}`),r+=e,this.makeAuthorizedRequest(r,t)}getAccounts(e={}){return this.makeConnectRequest("/accounts",{method:"GET",params:e})}getApps(e){let t={};return e!=null&&e.q&&(t.q=e.q),(e==null?void 0:e.hasActions)!=null&&(t.has_actions=e.hasActions?"1":"0"),(e==null?void 0:e.hasComponents)!=null&&(t.has_components=e.hasComponents?"1":"0"),(e==null?void 0:e.hasTriggers)!=null&&(t.has_triggers=e.hasTriggers?"1":"0"),this.addRelationOpts(t,e),this.makeAuthorizedRequest("/apps",{method:"GET",params:t})}apps(e){return this.getApps(e)}getApp(e){let t=`/apps/${e}`;return this.makeAuthorizedRequest(t,{method:"GET"})}app(e){return this.getApp(e)}getComponents(e){let t={};e!=null&&e.app&&(t.app=e.app),e!=null&&e.q&&(t.q=e.q),this.addRelationOpts(t,e,20);let r="/components";return(e==null?void 0:e.componentType)==="trigger"?r="/triggers":(e==null?void 0:e.componentType)==="action"&&(r="/actions"),this.makeConnectRequest(r,{method:"GET",params:t})}components(e){return this.getComponents(e)}getComponent(e){let{key:t}=e,r=`/components/${t}`;return this.makeConnectRequest(r,{method:"GET"})}component({key:e}){return this.getComponent({key:e})}configureComponent(e){let{userId:t,externalUserId:r=t,componentId:n}=e,o=typeof n=="object"?n.key:n,i={external_user_id:r,id:o,prop_name:e.propName,configured_props:e.configuredProps,dynamic_props_id:e.dynamicPropsId,page:e.page,prev_context:e.prevContext,query:e.query};return this.makeConnectRequest("/components/configure",{method:"POST",body:i})}componentConfigure(e){return this.configureComponent(e)}reloadComponentProps(e){let{userId:t,externalUserId:r=t,componentId:n}=e,o=typeof n=="object"?n.key:n,i={external_user_id:r,id:o,configured_props:e.configuredProps,dynamic_props_id:e.dynamicPropsId};return this.makeConnectRequest("/components/props",{method:"POST",body:i})}componentReloadProps(e){return this.reloadComponentProps(e)}runAction(e){let{userId:t,externalUserId:r=t,actionId:n}=e,o=typeof n=="object"?n.key:n,i={external_user_id:r,id:o,configured_props:e.configuredProps,dynamic_props_id:e.dynamicPropsId,stash_id:e.stashId};return this.makeConnectRequest("/actions/run",{method:"POST",body:i})}actionRun(e){return this.runAction(e)}deployTrigger(e){let{userId:t,externalUserId:r=t,triggerId:n}=e,o=typeof n=="object"?n.key:n,i={external_user_id:r,id:o,configured_props:e.configuredProps,dynamic_props_id:e.dynamicPropsId,workflow_id:e.workflowId,webhook_url:e.webhookUrl};return this.makeConnectRequest("/triggers/deploy",{method:"POST",body:i})}triggerDeploy(e){return this.deployTrigger(e)}deleteTrigger(e){let{id:t,externalUserId:r,ignoreHookErrors:n=null}=e;return this.makeConnectRequest(`/deployed-triggers/${t}`,{method:"DELETE",params:{external_user_id:r,ignore_hook_errors:n}})}getTrigger(e){let{id:t,externalUserId:r}=e;return this.makeConnectRequest(`/deployed-triggers/${t}`,{method:"GET",params:{external_user_id:r}})}getTriggers(e){let{externalUserId:t}=e;return this.makeConnectRequest("/deployed-triggers",{method:"GET",params:{external_user_id:t}})}updateTrigger(e){let{id:t,externalUserId:r,active:n=null,configuredProps:o=null,name:i=null}=e;return this.makeConnectRequest(`/deployed-triggers/${t}`,{method:"PUT",params:{external_user_id:r},body:{active:n,configured_props:o,name:i}})}getTriggerEvents(e){let{id:t,externalUserId:r,limit:n=null}=e;return this.makeConnectRequest(`/deployed-triggers/${t}/events`,{method:"GET",params:{external_user_id:r,n}})}getTriggerWorkflows(e){let{id:t,externalUserId:r}=e;return this.makeConnectRequest(`/deployed-triggers/${t}/pipelines`,{method:"GET",params:{external_user_id:r}})}updateTriggerWorkflows(e){let{id:t,externalUserId:r,workflowIds:n}=e;if(!Array.isArray(n))throw new Error("workflowIds must be an array");return this.makeConnectRequest(`/deployed-triggers/${t}/pipelines`,{method:"PUT",params:{external_user_id:r},body:{workflow_ids:n}})}getTriggerWebhooks(e){let{id:t,externalUserId:r}=e;return this.makeConnectRequest(`/deployed-triggers/${t}/webhooks`,{method:"GET",params:{external_user_id:r}})}updateTriggerWebhooks(e){let{id:t,externalUserId:r,webhookUrls:n}=e;if(!Array.isArray(n))throw new Error("webhookUrls must be an array");return this.makeConnectRequest(`/deployed-triggers/${t}/webhooks`,{method:"PUT",params:{external_user_id:r},body:{webhook_urls:n}})}buildWorkflowUrl(e){let t=e.trim().replace(/[^\w-./:]/g,"").toLowerCase();if(!t)throw new Error("URL or endpoint ID is required");let r;if(t.includes(".")||t.startsWith("http")){let o;try{let i=t.startsWith("http")?t:`https://${t}`;o=new URL(i)}catch(i){throw new Error(`
          The provided URL is malformed: "${t}".
          Please provide a valid URL.
        `)}if(!o.hostname.endsWith(this.workflowDomain))throw new Error(`Invalid workflow domain. URL must end with ${this.workflowDomain}`);r=o.href}else{if(!/^e(n|o)[a-z0-9-]+$/i.test(t))throw new Error(`
          Invalid endpoint ID format.
          Must contain only letters, numbers, and hyphens, and start with either "en" or "eo".
        `);r=`https://${t}.${this.workflowDomain}`}return r}async invokeWorkflow(e,t={},r="none"){let{body:n,headers:o={}}=t,i=this.buildWorkflowUrl(e),p;switch(r){case"static_bearer_token":p=o.Authorization;break;case"oauth":p=await this.authHeaders();break;default:break}return this.makeRequest("",d(a({},t),{baseURL:i,method:t.method||"POST",headers:p?d(a({},o),{Authorization:p}):o,body:n}))}async invokeWorkflowForExternalUser(e,t,r={}){if(!(t!=null&&t.trim()))throw new Error("External user ID is required");if(!e.trim())throw new Error("Workflow URL is required");if(!await this.authHeaders())throw new Error("OAuth or token is required for invoking workflows for external users. Please pass credentials for a valid OAuth client");let{headers:n={}}=r;return this.invokeWorkflow(e,d(a({},r),{headers:d(a({},n),{"X-PD-External-User-ID":t})}),"oauth")}addRelationOpts(e,t,r){(t==null?void 0:t.limit)!=null&&(e.limit=""+t.limit),r!=null&&!e.limit&&(e.limit=""+r),t!=null&&t.after&&(e.after=t.after),t!=null&&t.before&&(e.before=t.before)}};var b=class extends Error{};function V(s={}){return new O(s)}var O=class extends C{constructor(t){super(t);this.iframeId=0;this.baseURL=`https://${t.frontendHost||"pipedream.com"}`,this.iframeURL=`${this.baseURL}/_static/connect.html`,this.tokenCallback=t.tokenCallback,this.externalUserId=t.externalUserId}async token(){if(this._token&&this._tokenExpiresAt&&this._tokenExpiresAt>new Date)return this._token;if(this._tokenRequest)return this._tokenRequest;let t=this.tokenCallback,r=this.externalUserId;if(!t)throw new Error("No token callback provided");if(!r)throw new Error("No external user ID provided");return this._tokenRequest=(async()=>{let{token:n,expires_at:o}=await t({externalUserId:r});return this._token=n,this._tokenExpiresAt=new Date(o),this._tokenRequest=void 0,n})(),this._tokenRequest}refreshToken(){this._token=void 0}rawToken(){return this._token}async connectAccount(t){var i;let r=!1,n=!1,o=p=>{var f,u,g,c,l;switch((f=p.data)==null?void 0:f.type){case"success":r=!0,n=!0,(g=t.onSuccess)==null||g.call(t,{id:(u=p.data)==null?void 0:u.authProvisionId});break;case"error":n=!0,(c=t.onError)==null||c.call(t,new b(p.data.error));break;case"close":this.cleanup(o),(l=t.onClose)==null||l.call(t,{successful:r,completed:n});break;default:break}};window.addEventListener("message",o);try{await this.createIframe(t)}catch(p){(i=t.onError)==null||i.call(t,p)}this.refreshToken()}cleanup(t){var r;(r=this.iframe)==null||r.remove(),window.removeEventListener("message",t)}async createIframe(t){let r=t.token||await this.token(),n=new URLSearchParams({token:r});if(typeof t.app=="string")n.set("app",t.app);else throw new b("Object app not yet supported");t.oauthAppId&&n.set("oauthAppId",t.oauthAppId);let o=document.createElement("iframe");o.id=`pipedream-connect-iframe-${this.iframeId++}`,o.title="Pipedream Connect",o.src=`${this.iframeURL}?${n.toString()}`,o.style.cssText="position:fixed;inset:0;z-index:2147483647;border:0;display:block;overflow:hidden auto",o.width="100%",o.height="100%",o.onload=()=>{this.iframe=o},document.body.appendChild(o)}async authHeaders(){if(!await this.token())throw new Error("No token provided");return`Bearer ${await this.token()}`}getAccounts(t){return super.getAccounts(t)}};export{O as BrowserClient,V as createFrontendClient};
//# sourceMappingURL=browser.js.map
# render.yaml
services:
  # Service API (Web Service)
  - type: web
    name: test-drive-webapp # Ou le nom que vous voulez/avez dans Render
    env: docker
    repo: https://github.com/ydjemai93/pam-test-drive.git # URL du repo
    branch: main # Ou votre branche de déploiement
    # Chemin vers le Dockerfile API, relatif à la racine du repo
    dockerfilePath: ./Cartesia/Demo/Dockerfile.api
    # Commande de démarrage pour l'API (relative au WORKDIR /app dans le Dockerfile)
    startCommand: uvicorn api.main:app --host 0.0.0.0 --port $PORT
    envVars:
      - fromGroup: pam-demo-shared-env # Nom de votre groupe d'environnement partagé

  # Service Agent (Background Worker)
  - type: worker # Type Worker pour l'agent persistant
    name: test-drive-worker # Ou le nom que vous voulez/avez dans Render
    env: docker
    repo: https://github.com/ydjemai93/pam-test-drive.git # URL du repo
    branch: main # Ou votre branche de déploiement
    # Chemin vers le Dockerfile Agent, relatif à la racine du repo
    dockerfilePath: ./Cartesia/Demo/Dockerfile.agent
    # Commande de démarrage pour l'Agent (relative au WORKDIR /app/outbound dans le Dockerfile)
    startCommand: python agent.py start
    envVars:
      - fromGroup: pam-demo-shared-env # Nom de votre groupe d'environnement partagé

# Optionnel: Définir le groupe d'environnement ici si vous ne l'avez pas fait dans l'UI
# envVarGroups:
#   - name: pam-demo-shared-env
#     envVars:
#       - key: LIVEKIT_URL
#         value: VOTRE_URL
#       - key: LIVEKIT_API_KEY
#         sync: false # Recommandé pour les secrets
#       - key: LIVEKIT_API_SECRET
#         sync: false # Recommandé pour les secrets
#       # ... Ajoutez TOUTES les autres variables ici ...